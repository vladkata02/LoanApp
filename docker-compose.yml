version: '3.8'

services:
  # SQL Server Database
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: loanapp-database
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_SA_PASSWORD:-LoanApp123!@#}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - loanapp_data:/var/opt/mssql
    networks:
      - loanapp-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Backend API
  api:
    build:
      context: .
      dockerfile: LoanApp.Api/Dockerfile
    container_name: loanapp-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=LoanAppDb;User Id=sa;Password=${DB_SA_PASSWORD:-LoanApp123!@#};TrustServerCertificate=True
      - AppSettings__Application__JwtSection__Secret=${JWT_SECRET}
      - AppSettings__Application__JwtSection__Issuer=LoanAppApi
      - AppSettings__Application__JwtSection__Audience=LoanAppClient
      - AppSettings__Application__JwtSection__ExpiryMinutes=60
      - AppSettings__Data__AdminAccountSettings__Email=admin@loanapp.com
      - AppSettings__Data__AdminAccountSettings__Password=${ADMIN_PASSWORD}
      - AllowedOrigins__0=http://localhost:3000
      - AllowedOrigins__1=http://localhost:8081
      - AllowedOrigins__2=${FRONTEND_URL:-http://localhost:8081}
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - loanapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Frontend Web App
  web:
    build:
      context: LoanApp.Web
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${API_URL:-http://localhost:8080}
    container_name: loanapp-web
    ports:
      - "8081:8080"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - loanapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: loanapp-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    networks:
      - loanapp-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  loanapp_data:
    driver: local

networks:
  loanapp-network:
    driver: bridge